user                            nginx;
worker_processes                auto;

error_log                       /var/log/nginx/error.log warn;
pid                             /var/run/nginx.pid;

events {
    worker_connections          1024;
    use                         epoll;
    multi_accept                on;
}

http {
    include                     mime.types;
    default_type                application/octet-stream;

    include                     snippets/charset.conf;

    log_format                  main
                                '$remote_addr - $remote_user [$time_local] "$request" '
                                '$status $body_bytes_sent "$http_referer" '
                                '"$http_user_agent" "$http_x_forwarded_for"';

    access_log                  /var/log/nginx/access.log main;

    server_tokens               off;
    keepalive_timeout           20s;
    client_max_body_size        1M;

    sendfile                    on;
    tcp_nopush                  on;
    tcp_nodelay                 on;

    resolver                    1.1.1.1
                                1.0.0.1
                                [2606:4700:4700::1111]
                                [2606:4700:4700::1001]
                                valid=60s;
    resolver_timeout            3s;

    map $sent_http_content_type $referrer_policy {
        ~*text/(css|html|javascript)|application\/pdf|xml "strict-origin-when-cross-origin";
    }

    map $sent_http_content_type $frame_options {
        ~*text/html "deny";
    }

    map $sent_http_content_type $coep_policy {
        ~*text/(html|javascript)|application/pdf|xml "require-corp";
    }

    map $sent_http_content_type $coop_policy {
        ~*text/(html|javascript)|application/pdf|xml "same-origin";
    }

    map $sent_http_content_type $corp_policy {
        ~*text/(html|javascript)|application/pdf|xml "same-origin";
    }

    include                     snippets/compression.conf;
    include                     snippets/cache.conf;

    include                     conf.d/*;
}

include custom.d/*.conf;
